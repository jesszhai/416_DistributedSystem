For the run that produced our example log, we started 5 nodes (5 members listed in group file) with the same arguments as follows:
Timeout: 10
AYATime: 2
SendFailure: 30

We find this particular run interesting because it shows a scenario where a network parition occurs. A node finds that it is the only one alive in the network and so it declares itself as coordinator. Some time later however, it is able to rejoin the other nodes in the network when a new election is called. The nodes involved in this election are N3300, N3131, N2301, N2233, and N1356. After starting all the nodes, N2233 is the first to timeout and sends an ELECT message to the three higher nodes, N2301, N3131, and N3300 and all of these nodes send an ANSWER back to N2233, so N2233 knows it is not the coordinator. N3300 is then declared the coordinator and sends the COORD message, but the send to N2233 fails. Thus, N3300 is the coordinator to N3131, N231 and N1356. N2233 times out while waiting to the COORD message and once again sends ELECT messages to the higher nodes. For some reason none of the ELECT messages reach the recipient nodes before N2233 times out. Therefore, N2233 believes that all the other nodes have died, and accordingly declares itself as COORD. Moving forward, an AYA from N2301 to N3300 fails to send, and since N2301 does not receive an IAA, it calls an election. N3300 once again sends COORD, and this message is received by N2233, so now it is no longer in its own partition.